extends ./layout.jade

include ./mixins/issueActionButton

block content
  .row(style='opacity: 1;')
    .propertyPage.col-xs-12
      .row.propertyDataRow
        #propertyCaption.col-xs-12
          = property.name
      
      .row
        .col-xs-12
          div
            // Nav tabs
            ul#tabs.nav.nav-tabs(role='tablist')
              li.active(role='presentation')
                a(href='#paymentsList', aria-controls='paymentsList', role='tab', data-toggle='tab')
                  | #{__('Payments')}
                  
              li(role='presentation')
                a(href='#contracts', aria-controls='contracts', role='tab', data-toggle='tab') #{__('Contracts')}
                  
              li(role='presentation')
                a(href='#issues', aria-controls='issues', role='tab', data-toggle='tab') 
                  | #{__('Issues')} 
                  if openIssues.count
                    | (#{openIssues.count})
                  
              li(role='presentation')
                a(href='#photos', aria-controls='photos', role='tab', data-toggle='tab') #{__('Pictures')}
            // Tab panes
            .tab-content
              #paymentsList.tab-pane.active(role='tabpanel')
                table.table
                  tr
                    th(style='min-width: 200px;') #{__('Month')}
                    th(style='min-width: 200px;') #{__('Due')}
                    th(style='min-width: 200px;') #{__('Payed')}
                    th.align-right #{__('Payment')}
                    th(style='width: 100%')
                  for payment in payments
                    tr
                      td= payment.month
                      td= payment.dueDate
                      td= payment.paymentDate
                      td(class= 'align-right #{payment.overdue ? " paymentNOK" : ""}#{payment.payed ? " paymentOK" : ""}')
                        = payment.payment 
                        |&euro;
                      td.vAlign-center
                        if !payment.payed 
                          a.payedButton(href='#')
                            span.label.label-default(data-id= payment.id) #{__('Mark payed')}
                        if payment.overdue
                          a.reminderButton(href='#')
                            span.label.label-danger #{__('Send reminder')}
              #contracts.tab-pane(role='tabpanel')
                #addContract 
                  div 
                    span #{__('Click here to add new contract')}
                table.table
                  tr
                    th.nowrap #{__('Contract name')}
                    th.nowrap #{__('Since')}
                    th.nowrap #{__('Till')}
                    th.nowrap #{__('Payment frequency')}
                    th.nowrap #{__('Payment')}
                  for contract in contracts
                    tr.tenant(onclick='location.href="editContract.html?id=#{contract.id}"')
                      td.fullWidth= contract.contractCaption
                      td= contract.fromDate
                      td= contract.tillDate
                      td= contract.paymentFrequency
                      td= contract.payment
              #issues.tab-pane(role='tabpanel')
                .addIssueButton
                  div 
                    span #{__('Click here to add new issue')}
                table.table
                  tr
                    th #{__('Problem')}
                    th #{__('Date')}
                    th #{__('Status')}
                  for issue in openIssues
                    tr(class= issue.status == 'new' ? 'newIssue issue' : 'issue', data-id=issue.id)
                      td= issue.issueCaption
                      td= issue.creationDate
                      td
                        +issueActionButton(issue)
                  if solvedIssues.length > 0
                    tr
                      td(colspan='4')
                        #solvedIssues #{__('Solved')}
                    for issue in solvedIssues
                      tr.issue.solved(data-id=issue.id)
                        td= issue.issueCaption
                        td= issue.creationDate
                        td
                          +issueActionButton(issue)
              #photos.tab-pane(role='tabpanel')
                .row.propertyDataRow
                  .col-xs-4
                    #propertyPicture
                      form#my-awesome-dropzone.dropzone.needsclick.dz-clickable(method="post", enctype="multipart/form-data", action="/api/property/#{property.id}/photo")
                        .dz-message.needsclick= __('Drop files here or click to upload')
                  if property.photos
                    for photo in property.photos
                      .col-xs-4
                        #propertyPicture
                          img(src="/files/#{photo.fileId}")
                          a.removePhoto(href="/api/property/#{property.id}/photo/#{photo.id}")
                            span.glyphicon.glyphicon-trash

block scripts    
  script(type='text/javascript', src='/js/dropzone.js')
  script(type='text/javascript', src='/js/jquery.mask.min.js')
  script(type='text/javascript', src='/js/bootstrap-datepicker.min.js')
  script(type='text/javascript', src='/js/property.js')


